import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'war'
apply plugin: 'com.moowork.node'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
    }

    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
    }
}

node {
    // Version of node to use.
    version = '7.7.1'
	
    yarnVersion = '1.0.1'

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        download = false
    } else {
        download = true
    }

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}")
}

yarn_install {
    workingDir = file('./src')
}

npmInstall {
    workingDir = file('./src')
    outputs.upToDateWhen {false}
}

task npmCacheClean(type: NpmTask) {
    workingDir = file('./src')
    args = ['cache', 'clean']
}

test.dependsOn 'ngTest'
war.dependsOn 'ngBuildProd'

task ngTest(type: NpmTask) {
    workingDir = file('./src')
    args = ['run', 'ngSingleTest']
}

task start(type: NpmTask) {
    workingDir = file('./src')
    args = ['start']
}

task ngBuildProd(type: NpmTask) {
    workingDir = file('./src')
    args = ['run', 'buildProd']
}

war {
    from 'src/dist'
}